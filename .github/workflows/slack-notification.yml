# This is a basic workflow to help you get started with Actions

name: Slack Notifications Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  pull_request:
    types: [review_requested]
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  team_review_request:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    if: ${{ github.event.requested_team.name == 'gionatanteam' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Runs a single command using the runners shell
      - name: view the secrets context
        shell: bash
        run: echo "$SECRETS_CONTEXT"
        env:
          SECRETS_CONTEXT: ${{ toJson(secrets) }}

      - name: transform description
        shell: bash
        run: |
          read -r -d '' DESCRIPTION << AAAAA
          ${{ github.event.pull_request.body }} 
          AAAAA
          DESCRIPTION=${DESCRIPTION::150}
          echo ::set-output name=DESCRIPTION::${DESCRIPTION}
          
      # My steps
      - name: Review Request message to Slack Channel
        uses: slackapi/slack-github-action@v1.19.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.GIONATANBOT }}
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: 'C03M384EA0K'
          # For posting a simple plain text message
          payload: |
            {
              "text": "Review request to Slack channel",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<!here|here>, *Review Request* from <${{ github.event.pull_request.user.html_url }}|${{ github.event.pull_request.user.login }}>\n*Repo*: ${{ github.event.pull_request.base.repo.name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Pull Request #${{ github.event.pull_request.number }}*: <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|${{ github.event.pull_request.title }}>\n${{ steps.vars.outputs.DESCRIPTION }}"
                  },
                  "block_id": "${{ github.event.pull_request._links.html.href }}"
                }
              ]
            }

  team_merge_request:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    if: ${{ github.event.requested_team.name == 'gionatanteam2' }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Send message to Slack Channel
        uses: slackapi/slack-github-action@v1.19.0
        env:
          SLACK_BOT_TOKEN: ${{ secrets.GIONATANBOT }}
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          channel-id: 'C03M384EA0K'
          # For posting a simple plain text message
          payload: |
            {
              "text": "Merge Request message to Slack channel",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "<!here|here>, *Merge Request* from <${{ github.event.pull_request.user.html_url }}|${{ github.event.pull_request.user.login }}>\n*Repo*: ${{ github.event.pull_request.base.repo.name }}"
                  }
                },
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "*Pull Request #${{ github.event.pull_request.number }}*: <${{ github.event.pull_request.html_url || github.event.head_commit.url }}|${{ github.event.pull_request.title }}>\n${{ github.event.pull_request.body }}"
                  }
                }
              ]
            }
